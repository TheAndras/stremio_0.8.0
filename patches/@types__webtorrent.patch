diff --git a/index.d.ts b/index.d.ts
index cecebd1d96e56c37b827ec1ec9e0253a78120726..31a32ec24828930ce6e0b6c6c32fa8aaab7cf0b6 100644
--- a/index.d.ts
+++ b/index.d.ts
@@ -69,6 +69,7 @@ declare namespace WebTorrent {
         urlList?: string[] | undefined;
         maxWebConns?: number | undefined;
         path?: string | undefined;
+        paused?: boolean | undefined;
         store?(chunkLength: number, storeOpts: { length: number; files: File[]; torrent: Torrent }): any;
         private?: boolean | undefined;
         destroyStoreOnDestroy?: boolean | undefined;
@@ -77,6 +78,7 @@ declare namespace WebTorrent {
         preloadedStore?(): void;
         strategy?: string | undefined;
         createdBy?: string | undefined;
+        deselect?: boolean | undefined;
     }
 
     interface TorrentDestroyOptions {
@@ -137,7 +139,7 @@ declare namespace WebTorrent {
         readonly torrents: Torrent[];
 
         // eslint-disable-next-line @typescript-eslint/no-invalid-void-type
-        get(torrentId: Torrent | string | Buffer): Torrent | void;
+        get(torrentId: Torrent | string | Buffer): Promise<Torrent | undefined>;
 
         throttleDownload(rate: number): boolean | undefined;
 
@@ -148,6 +150,10 @@ declare namespace WebTorrent {
         readonly uploadSpeed: number;
 
         readonly progress: number;
+        
+        readonly offset: number;
+        
+        readonly type: string;
 
         readonly ratio: number;
     }
@@ -211,7 +217,7 @@ declare namespace WebTorrent {
 
         readonly maxWebConns: number;
 
-        destroy(opts?: TorrentDestroyOptions, cb?: (err: Error | string) => void): void;
+        destroy(opts?: TorrentDestroyOptions, cb?: (err: Error | string) => void): Promise<void>;
 
         addPeer(peer: string | SimplePeer): boolean;
 
@@ -236,6 +242,8 @@ declare namespace WebTorrent {
         on(event: "download" | "upload", callback: (bytes: number) => void): this;
 
         on(event: "wire", callback: (wire: Wire, addr?: string) => void): this;
+        
+        on(event: "verified", callback: (piece_index: number) => void): this;
 
         on(event: "noPeers", callback: (announceType: "tracker" | "dht") => void): this;
     }
@@ -259,6 +267,8 @@ declare namespace WebTorrent {
 
         createReadStream(opts?: { start: number; end: number }): NodeJS.ReadableStream;
 
+        stream(opts?: { start: number; end: number }): ReadableStream;
+
         getBuffer(callback: (err: string | Error | undefined, buffer?: Buffer) => void): void;
 
         appendTo(
@@ -292,8 +302,14 @@ declare namespace WebTorrent {
         getBlob(callback: (err: string | Error | undefined, blob?: Blob) => void): void;
 
         getBlobURL(callback: (err: string | Error | undefined, blobURL?: string) => void): void;
+
+        [Symbol.asyncIterator]: (opts: {start: number; end: number}) => FileIterator
     }
 
+    interface FileIterator extends AsyncIterator<Uint8Array> {
+        [Symbol.asyncIterator]: () => AsyncIterator<Uint8Array>
+     }
+
     interface TorrentPiece {
         readonly length: number;
 
