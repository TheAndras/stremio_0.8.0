diff --git a/node_modules/@types/webtorrent/index.d.ts b/node_modules/@types/webtorrent/index.d.ts
index ad40714..8e38ddc 100644
--- a/node_modules/@types/webtorrent/index.d.ts
+++ b/node_modules/@types/webtorrent/index.d.ts
@@ -65,6 +65,7 @@ declare namespace WebTorrent {
         urlList?: string[] | undefined;
         maxWebConns?: number | undefined;
         path?: string | undefined;
+        paused?: boolean | undefined;
         store?(chunkLength: number, storeOpts: { length: number; files: File[]; torrent: Torrent }): any;
         private?: boolean | undefined;
         destroyStoreOnDestroy?: boolean | undefined;
@@ -72,6 +73,7 @@ declare namespace WebTorrent {
         skipVerify?: boolean | undefined;
         preloadedStore?(): void;
         strategy?: string | undefined;
+        deselect?: boolean | undefined;
     }
 
     interface TorrentDestroyOptions {
@@ -121,7 +123,7 @@ declare namespace WebTorrent {
             torrentId: Torrent | string | Buffer,
             opts?: TorrentDestroyOptions,
             callback?: (err: Error | string) => void,
-        ): void;
+        ): Promise<void>;
 
         destroy(callback?: (err: Error | string) => void): void;
 
@@ -133,7 +135,7 @@ declare namespace WebTorrent {
         readonly torrents: Torrent[];
 
         // eslint-disable-next-line @typescript-eslint/no-invalid-void-type
-        get(torrentId: Torrent | string | Buffer): Torrent | void;
+        get(torrentId: Torrent | string | Buffer): Promise<Torrent | undefined>;
 
         readonly downloadSpeed: number;
 
@@ -229,6 +231,8 @@ declare namespace WebTorrent {
 
         on(event: "wire", callback: (wire: Wire, addr?: string) => void): this;
 
+        on(event: "verified", callback: (piece_index: number) => void): this;
+
         on(event: "noPeers", callback: (announceType: "tracker" | "dht") => void): this;
     }
 
@@ -243,6 +247,10 @@ declare namespace WebTorrent {
 
         readonly progress: number;
 
+        readonly offset: number;
+
+        readonly type: string;
+
         get streamURL(): string;
 
         select(): void;
@@ -251,6 +259,8 @@ declare namespace WebTorrent {
 
         createReadStream(opts?: { start: number; end: number }): NodeJS.ReadableStream;
 
+        stream(opts?: { start: number; end: number }): ReadableStream;
+
         getBuffer(callback: (err: string | Error | undefined, buffer?: Buffer) => void): void;
 
         appendTo(
@@ -284,6 +294,12 @@ declare namespace WebTorrent {
         getBlob(callback: (err: string | Error | undefined, blob?: Blob) => void): void;
 
         getBlobURL(callback: (err: string | Error | undefined, blobURL?: string) => void): void;
+
+        [Symbol.asyncIterator]: (opts: {start: number; end: number}) => FileIterator
+    }
+
+    interface FileIterator extends AsyncIterator<Uint8Array> {
+        [Symbol.asyncIterator]: () => AsyncIterator<Uint8Array>
     }
 
     interface TorrentPiece {
